services:
  # ollama:
  #   image: ollama/ollama
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama:/root/.ollama
  #   restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-net
  
  db:
    image: pgvector/pgvector:0.8.0-pg17
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "article_search"
    volumes:
      - ./volumes/postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    
  # text-embeddings:
  #   image: ghcr.io/huggingface/text-embeddings-inference:1.6
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./volumes/embedding:/data
  #   environment:
  #     - OTLP_ENDPOINT=http://otel-collector:4317
  #     - MODEL_ID=nomic-ai/nomic-embed-text-v1
  #     - JSON_OUTPUT=/data/output.json
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: all
  #             capabilities: [gpu]
  #   pull_policy: always
  #   networks:
  #     - app-network
    
  # pdf_extraction_app:
  #       build:
  #           context: ./src/pdf_extraction_app
  #           dockerfile: dockerfile
  #       ports:
  #           - "7070:7070"
  #       volumes:
  #           - ./papers_pdf:/code/app/pdf
  #       environment:
  #           PAPERS_PDF_PATH: /code/app/pdf
  #           TEXT_EMBEDDINGS_URL: http://text-embeddings:80
  #           DATABASE_URL: postgresql://postgres:postgres@db:5432/article_search
  #       depends_on:
  #          # - text-embeddings
  #           - db
  #       networks:
  #           - app-network
  #           - kafka-net

 


  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yaml:/etc/prometheus/prometheus.yml
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #   restart: unless-stopped
  
  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   restart: unless-stopped
  #   depends_on:
  #     - prometheus

networks:
  app-network:
    driver: bridge
  kafka-net:
    driver: bridge

volumes:
  ollama:
  postgres-data:
  prometheus_data:
  # grafana_data: